library(class)
sqrt(1470)
library(class)
em_test_pred <- knn(train = em_train, test = em_test, cl = em_train_target,
k = 38)
head(em)
em_train_target <- em$Attrition[1:1029]
em_test_target <- em$Attrition[1030:1470]
class(em_train_target)
class(em_test_target)
library(class)
em_test_pred <- knn(train = em_train, test = em_test, cl = em_train_target,
k = 38)
library(caret)
confusionMatrix(em_test_pred, em_test_target)
tab <- table(em_test_pred, em_test_target)
tab
ran <- runif(nrow(em))
ran
em <- em [order(ran), ]
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
em_norm <- as.data.frame(lapply(em[2:5], normalize))
str(em_norm)
1470 * 0.7
1470- 1029
sqrt(1470)
head(em)
em_train <- em_norm[1:1029, ]
em_test <- em_norm[1030:1470, ]
em_train_target <- em$Attrition[1:1029]
em_test_target <- em$Attrition[1030:1470]
class(em_train_target)
class(em_test_target)
library(class)
library(caret)
em_test_pred <- knn(train = em_train, test = em_test, cl = em_train_target,
k = 38)
tab <- table(em_test_pred, em_test_target)
tab
em_test_target
library(igraphdata)
library(igraph)
data(enron)
head(enron)
V(enron)
vertex_attr(enron)
class(enron)
class(enron)
df <- as_data_frame(enrn, what = c("both"))
df <- as_data_frame(enron, what = c("both"))
head(df)
colnames(df)
columns(df)
str(df)
class(df)
View(df)
plot(enron)
enron
out_degree <- degree(enron, mode = c("out"))
which.max(out_degree)
in_degree <- degree(enron, mode = c("in"))
between <- betweenness.estimate(enron, directed = TRUE)
between <- betweenness.estimate(enron, directed = TRUE, normalized = TRUE)
between <- betweenness(enron, directed = TRUE, normalized = TRUE)
head(between)
enron_measures <- enron %>%
mtutate(in_degree = degree(enron, mode = c("out")),
out_degree = degree(enron, mode = c("in")))
enron_measures <- enron %>%
mutate(in_degree = degree(enron, mode = c("out")),
out_degree = degree(enron, mode = c("in")))
library(tidygraph)
enron_measures <- enron %>%
mutate(in_degree = degree(enron, mode = c("out")),
out_degree = degree(enron, mode = c("in")))
V(enron)
E(enron)
head(df)
edges <- df$edges
nodes <- df$vertices
head(edges)
head(nodes)
str(edges)
str(nodes)
degree(enron)
nodes_with_centrality <- nodes %>%
mutate(degree = degree(enron)) %>%
arrange(desc(degree))
nodes_with_centrality
View(nodes_with_centrality)
node_measures <- nodes %>%
mutate(in_degree = degree(enron, mode = c("in")),
out_degree = degree(enron, mode = c("out")),
strength = strength(enron)) %>%
arrange(desc(strength))
node_measures %>%
limit(45)
node_measures %>%
head(45)
View(node_measures)
node_measures <- nodes %>%
mutate(in_degree = degree(enron, mode = c("in")),
out_degree = degree(enron, mode = c("out")),
strength = strength(enron),
between = betweenness(enron, directed = TRUE)) %>%
arrange(desc(strength))
getwd()
getwd()
setwd("/Users/gianzlupko/Desktop/GitHub/NetworkResearch")
head(node_measures$between)
library(ggraph)
str(node_measures)
table(node_meausures$Note)
table(node_measures$Note)
node_measures
str(node_measures)
str(enron)
summary(enron)
setwd("/Users/gianzlupko/Desktop/GitHub/NetworkResearch/Network_Research")
# exmaien
table(node_measures$Note)
# organize enron data set into JobLevel
library(stringr)
Employee <- "Employee"
Manager <-  "Manager"
Director <- "Director"
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(c(string =  CEO, pattern = "CEO", replacement = "C-Suite" )))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(c(string =Note, pattern = "CEO", replacement = "C-Suite" )))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(string = Note, pattern = "CEO", replacement = "C-Suite" ))
head(nodes_with_levels)
nodes_with_levels$JobLevel
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_sub(string = Note, pattern = "CEO", replacement = "C-Suite" ))
str_subset(nodes_with_levels$Note, pattern = "CEO")
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_subset(string = Note, pattern = "CEO", replacement = "C-Suite"))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_subset(string = Note, pattern = "^$CEO", replacement = "C-Suite"))
str_subset(string = nodes_with_levels, pattern = "^Manager")
str_subset(string = nodes_with_levels, pattern = "^Manager")
str_subset(string = nodes_with_levels, pattern = "^ Manager")
str_subset(string = nodes_with_levels, pattern = "^manager")
str_extract(string = nodes_with_levels, pattern = "[manager]")
str_subset(string = nodes_with_levels, pattern = "^[CEO]")
str_replace(nodes_with_levels, pattern = "^CEO", replacement = "C-Suite")
test <- str_replace(nodes_with_levels, pattern = "^CEO", replacement = "C-Suite")
test
sub(pattern = "CEO", replacement = "C-Suite", x = nodes_with_levels$Note)
mutate(JobLevel = str_replace(Note, "CEO", "C-Suite")
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(Note, "CEO", "C-Suite")
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(Note, "CEO", "C-Suite"))
node_measures
View(node_measures)
nodes_with_levels <-node_measures %>%
mutate(JobLevel = str_replace(Note, "CEO", "C-Suite"))
View(node_with_levels)
View(nodes_with_levels)
nodes_with_levels <-node_measures %>%
mutate(JobLevel = gsub("CEO", "C-Suite"))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = gsub("CEO", "C-Suite", Note))
View(nodes_with_levels)
nodes_with_levels <-node_measures %>%
mutate(JobLevel = gsub(x = Note, pattern = "^CEO", replacement = "C-Suite"))
nodes_with_levels$JobLevel
nodes_with_levels <-node_measures %>%
mutate(JobLevel = substr(x = Note, pattern = "^CEO", replacement = "C-Suite"))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = substr(x = Note, pattern = "^CEO", replacement = "C-Suite"))
nodes_with_levels <-node_measures %>%
nodes_with_levels <-node_measures %>%
nodes_with_levels <-node_measures %>%
mutate(JobLevel = substr(x = Note, pattern = "CEO", replacement = "C-Suite"))
nodes_with_levels <-node_measures %>%
mutate(JobLevel = substr(x = Note, "CEO","C-Suite"))
nodes_with_levels$JobLevel
nodes_with_levels$JobLevel
nodes_with_levels <-node_measures %>%
mutate(JobLevel = strsplit("CEO", "C-Suite")
nodes_with_levels$JobLevel
nodes_with_levels <-node_measures %>%
mutate(JobLevel = strsplit("CEO", "C-Suite"))
nodes_with_levels$JobLevel
unique(nodes_with_levels$Note)
for (i in 1:nrow(node_measures)) {
if("CEO" %in% node_measures$Note[i]) {
JobLevel = "C-Suite"}}
JobLevel
nodes_with_levels <-node_measures %>%
mutate(JobLevel =  if("CEO" %in% Note) = "C-Suite")
nodes_with_levels <-node_measures %>%
mutate(JobLevel = for (i in 1:nrow(node_measures) {
if("CEO" %in% Note) {
JobLevel = "C-Suite"
}
}))
unique(nodes_with_levels$Note)
unique(node_measures$Note)
nodes_with_levels <- node_meauses %>%
mutate(JobLevel = unique(Note))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = unique(Note))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
node_with_levels$JobLevel
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
nodes_with_levels$JobLevel
nodes_with_levels <- node_measures %>%
mutate(JobLevel = distinct(Note))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
nodes_with_levels$Note
nodes_with_levels$Note[%in% "employee"] <- "Employee"
nodes_with_levels$Note[%in% "employee"] <- "Employee"
nodes_with_levels$Note["%employee"] <- "Employee"
nodes_with_levels$Note
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
View(nodes_with_levels)
nodes_with_levels$Note["%vice"] <- "Vice President"
View(nodes_with_levels)
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
nodes_with_levels <- node_measures %>%
mutate(JobLevel = if else(Note = "%employee", 1 if else (
Note = "%manager", 2, if else(Note = "%director", 3))))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = if else(Note = "%employee", 1 if else (
Note = "%manager", 2, if else(Note = "%director", 3)))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = if else(Note = "%employee", 1, ""))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = if else(Note = "%employee", 1, ""))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
View(nodes_with_levels)
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note) %>%
order()
head(node_with_levels$JobLevel)
head(nodes_with_levels$JobLevel)
View(nodes_with_levels)
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note)
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note) %>%
arrange(JobLevel)
View(nodes_with_levels)
nodes_with_levels$JobLevel[1:5] <- "CEO"
View(nodes_with_levels)
nodes_with_levels$JobLevel[6:19] <- "Director"
nodes_with_levels$JobLevel[20:60] <- "Employee"
nodes_with_levels$JobLevel[62:84] <- "Manager"
nodes_with_levels$JobLevel[139:143] <- "President"
nodes_with_levels$JobLevel[155:184] <- "Vice President"
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) + geom_bar()
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) +
geom_bar(stat = "identity")
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) +
geom_bar(stat = "identity") + theme(axis.ticks.x = element_blank())
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_blank())
nodes_with_levels$JobLevel[61] <- "Executive"
nodes_with_level$JobLevel["Employee"] <- "Associate"
nodes_with_levels$JobLevel["Employee"] <- "Associate"
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_blank()) +
ylab("")
View(nodes_with_levels)
nodes_with_levels$JobLevel["Director"] <- "Executive"
View(nodes_with_levels)
nodes_with_levels$JobLevel["Employee"] <- nodes_with_levels$JobLevel["Associate"]
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"))
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(JobLevel, c(CEO, Director, President) = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(JobLevel, CEO = "Executive"))
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(JobLevel, CEO = "Executive"),
dplyr::recode(JobLevel, Director = "Executive"),
dplyr::recode(JobLevel, President = "Executive"),
dplyr::recode(JobLevel, Vice President = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(JobLevel, CEO = "Executive"),
dplyr::recode(JobLevel, Director = "Executive"),
dplyr::recode(JobLevel, President = "Executive"),
dplyr::recode(JobLevel, "Vice President" = "Executive"))
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(JobLevel, CEO = "Executive"),
dplyr::recode(JobLevel, Director = "Executive"),
dplyr::recode(JobLevel, President = "Executive"))
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = dplyr::recode(JobLevel, Employee = "Associate"),
dplyr::recode(c(JobLevel, CEO = "Executive"),
JobLevel, Director = "Executive"))
nodes_with_levels <- node_measures %>%
mutate(JobLevel = Note) %>%
arrange(JobLevel)
nodes_with_levels$JobLevel[1:5] <- "CEO"
nodes_with_levels$JobLevel[6:19] <- "Director"
nodes_with_levels$JobLevel[20:60] <- "Employee"
nodes_with_levels$JobLevel[62:84] <- "Manager"
nodes_with_levels$JobLevel[85:138] <- "NA"
nodes_with_levels$JobLevel[139:143] <- "President"
nodes_with_levels$JobLevel[144:154] <- "Trader"
nodes_with_levels$JobLevel[155:184] <- "Vice President"
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(x = JobLevel, y = n, fill = JobLevel)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_blank()) +
ylab("")
View(nodes_with_levels)
nodes_with_levels$JobLevel[61] <- "Executive"
nodes_with_levels$JobLevel["Employee"] <- nodes_with_levels$JobLevel["Associate"]
nodes_with_levels$JobLevel["Director"] <- "Executive"
nodes_with_levels$JobLevel["CEO"] <- Recode(nodes_with_levels$JobLevel["Executive"])
library(car)
nodes_with_levels$JobLevel["CEO"] <- recode(nodes_with_levels$JobLevel["Executive"])
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
group_by(JobLevel) %>%
mutate(JobLevel = recode(JobLevel, "CEO" = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = recode(JobLevel, "CEO" = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = recode("CEO" = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = recode("CEO" = "Executive"))
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = ifelse (JobLevel == "CEO", "Executive", JobLevel))
View(nodes_with_levels)
nodes_with_levels <- nodes_with_levels %>%
mutate(JobLevel = ifelse (JobLevel == "CEO", "Executive", JobLevel)) %>%
mutate(JobLevel = ifelse (JobLevel == "Director", "Executive", JobLevel)) %>%
mutate(JobLevel = ifelse (JobLevel == "Vice President", "Executive", JobLevel)) %>%
mutate(JobLevel = ifelse (JobLevel == "President", "Executive", JobLevel)) %>%
mutate(JobLevel = ifelse (JobLevel == "Trader", "Associate", JobLevel)) %>%
mutate(JobLevel = ifelse (JobLevel == "NA", "Associate", JobLevel))
View(nodes_with_levels)
table(nodes_with_levels$JobLevel)
nodes_filtered <- nodes_with_levels %>%
select(-c(Email, Name, Note))
nodes_filtered <- nodes_filtered[, c(5,1,2,3,4)]
head(nodes_filtered)
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(JobLevel, n, fill = JobLevel)) + geom_bar(stat = "identity")
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(JobLevel, n, fill = JobLevel)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_blank()) + ylab("")
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(JobLevel, n, fill = JobLevel)) + geom_bar(stat = "identity") +
theme(axis.text.x = element_blank()) + ylab("") + theme(legend.position = "none")
head(nodes_filtered)
level_summary<- nodes_filtered %>%
group_by(JobLevel)
head(level_summar)
head(level_summary)
level_summary <- nodes_filtered %>%
group_by(JobLevel) %>%
summary(avg_in_degree = mean(in_degree),
avg_out_degree = mean(out_degree),
avg_strength = mean(strength))
level_summary
rm(level_summary)
head(nodes_filtered)
table(nodes_filtered$JobLevel)
nodes_filtered %>%
group_by(JobLevel) %>%
summary(avg_in_degree = mean(in_degree))
class(nodes_filtered)
nodes_with_levels %>%
group_by(JobLevel) %>%
count(JobLevel) %>%
ggplot(aes(JobLevel, n, fill = JobLevel)) + geom_bar(stat = "identity") +
ylab("") + theme(legend.position = "none")
head(nodes_filtered)
t.test(in_degree ~ JobLevel, data = nodes_filtered)
lm(in_degree ~ JobLevel, data = nodes_filtered)
lm(in_degree ~ JobLevel, data = nodes_filtered) %>%
tidy()
lm(out_degree ~ JobLevel, data = nodes_filtered) %>%
tidy()
cor(nodes_filtered, use = "everything", method = "pearson")
table(nodes_filtered$JobLevel)
View(nodes_filtered)
install.packages("corrplot")
library(corrplot)
corrplot(nodes_filtered, method = "circle")
corrplot(nodes_filtered, method = "color")
corrplot(nodes_filtered, method = "number")
m <- cor(nodes_filtered)
data(mtcars)
m <- cor(mtcars)
m
corrplot(m, method = "color")
class(nodes_filtered)
class(mtcars)
head(mtcars)
m <- cor(nodes_filtered[,-1])
corrplot(m, method = "color")
corrplot(m, type = "upper")
remove.packages("assertive.base")
remove.packages("corrplot")
table(nodes_filtered$JobLevel)
nodes_filtered %>%
group_by(JobLevel) %>%
count(JobLevel)
nodes_filtered %>%
group_by(JobLevel) %>%
summarize(avg_in_degree = mean(in_degree))
table(nodes_filtered$JobLevel)
head(nodes_filtered)
level_summary <- nodes_filtered %>%
group_by(JobLevel) %>%
summarize(avg_in_degree = mean(in_degree),
avg_out_degree = mean(out_degree),
avg_strength = mean(strength),
avg_between = mean(between))
level_summary
library(gridExtra)
avg_in_degree <- ggplot(data = level_summary, aes(x = JobLevel, y = avg_in_degree)) +
geom_bar(stat = "identity")
avg_in_degree
avg_in_degree <- ggplot(data = level_summary, aes(x = JobLevel, y = avg_in_degree,
fill = JobLevel)) + geom_bar(stat = "identity")
avg_in_degree
avg_in_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_in_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("In_Degree") + theme(legend.position = "none")
avg_in_degree
head(level_summary)
avg_out_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_out_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Out_Degree") + theme(legend.position = "none")
avg_strength <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_strength, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Strength") + theme(legend.position = "none")
avg_between <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_between, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Between") + theme(legend.position = "none")
grid.arrange(avg_in_degree, avg_out_degree, avg_strength, avg_between)
avg_in_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_in_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("") + theme(legend.position = "none") +
ggtitle("Avg. In-Degree")
avg_out_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_out_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Out_Degree") + theme(legend.position = "none")
avg_strength <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_strength, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Strength") + theme(legend.position = "none")
avg_between <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_between, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("Avg. Between") + theme(legend.position = "none")
grid.arrange(avg_in_degree, avg_out_degree, avg_strength, avg_between)
avg_in_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_in_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("") + theme(legend.position = "none") +
ggtitle("Avg. In-Degree")
avg_out_degree <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_out_degree, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("") + theme(legend.position = "none") +
ggtitle("Avg. Out-Degree")
avg_strength <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_strength, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("") + theme(legend.position = "none") +
ggtitle("Avg. Strength")
avg_between <- ggplot(data = level_summary,
aes(x = JobLevel, y = avg_between, fill = JobLevel)) +
geom_bar(stat = "identity") + ylab("") + theme(legend.position = "none") +
ggtitle("Avg. Betweenness")
grid.arrange(avg_in_degree, avg_out_degree, avg_strength, avg_between)
